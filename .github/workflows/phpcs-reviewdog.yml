name: PHPCS Reviewdog

on:
  pull_request:
    paths:
      - 'src/**/*.php'

permissions:
  contents: read
  pull-requests: write

jobs:
  phpcs-errors:
    name: PHPCS – Blocker Errors Only
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v4

      - name: 🐘 Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: 🧊 Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: 📦 Install Composer dependencies
        run: composer install --no-progress --prefer-dist

      - name: 🐶 Install reviewdog CLI
        run: |
          go install github.com/reviewdog/reviewdog/cmd/reviewdog@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: ❌ Run PHPCS & Report Blocking Errors
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          vendor/bin/phpcs --standard=./phpcs.xml --report=checkstyle src \
            | reviewdog -f=checkstyle \
                        -name="phpcs" \
                        -reporter=github-pr-check \
                        -fail-on-error=true \
                        -level=error


  phpcs-warnings:
    name: PHPCS – Sassy Warning Comments
    runs-on: ubuntu-latest
    needs: phpcs-errors
    continue-on-error: true

    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v4

      - name: 🐘 Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: 🧊 Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: 📦 Install Composer dependencies
        run: composer install --no-progress --prefer-dist

      - name: 🐶 Install reviewdog CLI
        run: |
          go install github.com/reviewdog/reviewdog/cmd/reviewdog@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: 🟡 Run PHPCS & Post Warning Comments
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          vendor/bin/phpcs --standard=./phpcs.xml --report=checkstyle src \
            | reviewdog -f=checkstyle \
                        -name="phpcs-warn" \
                        -reporter=github-pr-review \
                        -fail-on-error=false \
                        -level=warning
